//import sekcija

import java_cup.runtime.*;
import java.io.*;

parser code {:
   public static void main( String[] args )
   {
      try
	  {
		   FileReader file = new FileReader( args[0] );
		   Scanner scanner = new MPLexer( file );
		   MPParser parser = new MPParser( scanner );
		   parser.parse();
	  }
	  catch( Exception e )
	  {
		   e.printStackTrace();
	  }
   }
:};


//Terminali
terminal PROGRAM, VAR, INTEGER, CHAR, BEGIN, END, READ, WRITE, IF, THEN, ELSE;
terminal ID, CONST, PLUS, MUL, LEFTPAR, RIGHTPAR, COLON, ASSIGN, SEMI, COMMA, DOT;

//Neterminali
non terminal Program, NizImena, DeklProm, Blok, NizDekl, Deklaracija, Tip, NizNar, Naredba;
non terminal Ulaz, Izlaz, Dodela, Izraz, PIzraz, FIzraz, IfNar;


//Gramatika
Program ::= PROGRAM LEFTPAR NizImena RIGHTPAR SEMI DeklProm Blok DOT 
            {:
               System.out.println( "Redukcija 1: Program ::= program ( NizImena ) ; DeklProm Blok ." );
            :};

DeklProm ::= VAR NizDekl
             {:
                System.out.println( "Redukcija 2: DeklProm ::= var NizDekl" );
             :};

NizDekl ::= NizDekl Deklaracija 
            {:
               System.out.println( "Redukcija 3: NizDekl ::= NizDekl Deklaracija" );
            :}
          | Deklaracija
            {:
               System.out.println( "Redukcija 4: NizDekl ::= Deklaracija" );
            :}
          ;

Deklaracija ::= NizImena COLON Tip
                {:
                   System.out.println( "Redukcija 5: Deklaracija ::= NizImena : Tip" );
                :};

NizImena ::= NizImena COMMA ID
             {:
                System.out.println( "Redukcija 6: NizImena ::= NizImena , ID" );
             :} 
           | ID
             {:
                System.out.println( "Redukcija 7: NizImena ::= ID" );
             :}
           ;

Tip ::= INTEGER 
        {:
           System.out.println( "Redukcija 8: Tip ::= integer" );
        :}
      | CHAR
        {:
           System.out.println( "Redukcija 9: Tip ::= char" );
        :}
      ;

Blok ::= BEGIN NizNar END
         {:
            System.out.println( "Redukcija 10: Blok ::= begin NizNar end" );
         :};

NizNar ::= NizNar SEMI Naredba 
           {:
              System.out.println( "Redukcija 11: NizNar ::= NizNar ; Naredba" );
           :}
         | Naredba
           {:
              System.out.println( "Redukcija 12: NizNar ::= Naredba" );
           :}
         ;

Naredba ::= Ulaz
            {:
               System.out.println( "Redukcija 13: Naredba ::= Ulaz" );
            :}
          | Izlaz 
            {:
               System.out.println( "Redukcija 14: Naredba ::= Izlaz" );
            :}
          | Dodela
            {:
               System.out.println( "Redukcija 15: Naredba ::= Dodela" );
            :}
          | Blok
            {:
               System.out.println( "Redukcija 16: Naredba ::= Blok" );
            :}
          | IfNar
            {:
               System.out.println( "Redukcija 17: Naredba ::= IfNar" );
            :}
          ;

Ulaz ::= READ LEFTPAR ID RIGHTPAR
         {:
            System.out.println( "Redukcija 18: Ulaz ::= read ( ID )" );
         :};

Izlaz ::= WRITE LEFTPAR Izraz RIGHTPAR
          {:
             System.out.println( "Redukcija 19: Izlaz ::= write ( Izraz )" );
          :};

Dodela ::= ID ASSIGN Izraz
           {:
              System.out.println( "Redukcija 20: Dodela ::= ID := Izraz" );
           :};

Izraz ::= Izraz PLUS PIzraz 
          {:
             System.out.println( "Redukcija 21: Izraz ::= Izraz + Pizraz" );
          :}
        | PIzraz
          {:
             System.out.println( "Redukcija 22: Izraz ::= Pizraz" );
          :}
        ;

PIzraz ::= PIzraz MUL FIzraz
           {:
              System.out.println( "Redukcija 23: Pizraz ::= Pizraz * Fizraz" );
           :}
         | FIzraz
           {:
              System.out.println( "Redukcija 24: Pizraz ::= Fizraz" );
           :}
         ;

FIzraz ::= ID
           {:
              System.out.println( "Redukcija 25: Fizraz ::= ID" );
           :}
         | CONST
           {:
              System.out.println( "Redukcija 26: Fizraz ::= CONST" );
           :}
         | LEFTPAR Izraz RIGHTPAR
           {:
              System.out.println( "Redukcija 27: Fizraz ::= ( Izraz )" );
           :}
         ;

IfNar ::= IF Izraz THEN Naredba ELSE Naredba
          {:
             System.out.println( "Redukcija 28: IfNar ::= if Izraz then Naredba else Naredba" );
          :};